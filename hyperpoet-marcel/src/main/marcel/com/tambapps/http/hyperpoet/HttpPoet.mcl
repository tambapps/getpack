package com.tambapps.http.hyperpoet

import com.tambapps.http.contenttype.ContentType

import java.util.function.Function
import okhttp3.Request

public class HttpPoet extends AbstractHttpPoet {

  constructor(String baseUrl): super(baseUrl)
  constructor(): super("")

  fun DynamicObject request(String method, String path, Map params = null, Object body = null, ContentType contentType = null,
              Map headers = null, ContentType acceptContentType = null, Boolean skipHistory = null,
              Boolean print = null, Boolean printRequestBody = null, Boolean printResponseBody = null,
              Function parser = null, Function composer = null) {
    Request r = super.request(method, path, params, contentType, body, composer, headers, acceptContentType)
    Object o = doRequest(r, body, skipHistory, print, printRequestBody, printResponseBody, acceptContentType, parser)
    return DynamicObject.of(o)
  }

  fun DynamicObject get(String path, Map params = null, Object body = null, ContentType contentType = null,
          Map headers = null, ContentType acceptContentType = null, Boolean skipHistory = null,
          Boolean print = null, Boolean printRequestBody = null, Boolean printResponseBody = null,
          Function parser = null, Function composer = null) {
    Object o = request("GET", path, params, body, contentType, headers, acceptContentType, skipHistory, print, printRequestBody,
      printResponseBody, parser, composer)
    return DynamicObject.of(o)
  }

  fun DynamicObject delete(String path, Map params = null, Object body = null, ContentType contentType = null,
            Map headers = null, ContentType acceptContentType = null, Boolean skipHistory = null,
            Boolean print = null, Boolean printRequestBody = null, Boolean printResponseBody = null,
            Function parser = null, Function composer = null) {
    Object o = request("DELETE", path, params, body, contentType, headers, acceptContentType, skipHistory, print, printRequestBody,
      printResponseBody, parser, composer)
    return DynamicObject.of(o)
  }

  fun DynamicObject patch(String path, Map params = null, Object body = null, ContentType contentType = null,
            Map headers = null, ContentType acceptContentType = null, Boolean skipHistory = null,
            Boolean print = null, Boolean printRequestBody = null, Boolean printResponseBody = null,
            Function parser = null, Function composer = null) {
    Object o = request("PATCH", path, params, body, contentType, headers, acceptContentType, skipHistory, print, printRequestBody,
      printResponseBody, parser, composer)
    return DynamicObject.of(o)
  }

  fun DynamicObject put(String path, Map params = null, Object body = null, ContentType contentType = null,
            Map headers = null, ContentType acceptContentType = null, Boolean skipHistory = null,
            Boolean print = null, Boolean printRequestBody = null, Boolean printResponseBody = null,
            Function parser = null, Function composer = null) {
    Object o = request("PUT", path, params, body, contentType, headers, acceptContentType, skipHistory, print, printRequestBody,
      printResponseBody, parser, composer)
    return DynamicObject.of(o)
  }

  fun DynamicObject post(String path, Map params = null, Object body = null, ContentType contentType = null,
            Map headers = null, ContentType acceptContentType = null, Boolean skipHistory = null,
            Boolean print = null, Boolean printRequestBody = null, Boolean printResponseBody = null,
            Function parser = null, Function composer = null) {
    Object o = request("POST", path, params, body, contentType, headers, acceptContentType, skipHistory, print, printRequestBody,
      printResponseBody, parser, composer)
    return DynamicObject.of(o)
  }
}
